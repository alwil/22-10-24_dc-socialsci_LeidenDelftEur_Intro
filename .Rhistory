install.packages("xaringan")
install.packages("emo")
install.packages("xaringanthemer")
library(tidyverse)
interviews <- readr::read_csv("data/SAFI_clean.csv")
interviews_plotting <- readr::read_csv("data/interviews_plotting.csv")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(xaringanthemer)
style_duo(
primary_color = "#481567ff",
secondary_color = "#20a387ff",
text_bold_color = "#33638DFF",
code_inline_color = "#fde725ff"
)
interviews_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village)) +
geom_count() +
theme_minimal()
percent_wall_type <- interviews_plotting %>%
filter(respondent_wall_type != "cement") %>%
count(village, respondent_wall_type) %>%
group_by(village) %>%
mutate(percent = (n / sum(n)) * 100) %>%
ungroup()
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
scale_fill_viridis_d() # add colourblind-friendly palette
r_length <- 6
r_width <- 7
r_area <- r_length * r_width
floor(1.624)
num_char <- c(1, 2, 3, "a")
num_logical <- c(1, 2L, 3, TRUE)
char_logical <- c("a", "b", "c", TRUE)
tricky <- c(1, 2, 3, "4")
num_char
num_logical
char_logical
tricky
num_logical <- c(1, 2, 3, TRUE)
char_logical <- c("a", "b", "c", TRUE)
combined_logical <- c(num_logical, char_logical)
combined_logical
rooms <- c(1, 2, 1, NA, 3, 1, 3, 2, 8, NA, 1)
# 1
rooms_no_na <- rooms[!is.na(rooms)]
# or
rooms_no_na <- na.omit(rooms)
# 2
median(rooms, na.rm = TRUE) # or median(rooms_no_na)
# 3
rooms_above_2 <- rooms_no_na[rooms_no_na > 2]
length(rooms_above_2)
install.packages('devtools')
devtools::install_github("hadley/emo")
devtools::install('emo')
devtools::install_github("hadley/emo")
usethis::browse_github_pat()
create_github_token()
usethis::create_github_token()
devtools::install_github("hadley/emo")
usethis::edit_r_environ()
devtools::install_github("hadley/emo")
usethis::edit_r_environ()
devtools::install_github("hadley/emo")
usethis::edit_r_environ()
devtools::install_github("gadenbuie/countdown")
xaringan::infinite_moon_reader()
emo:jis()
emo::jis()
emo::jis
emo::ji("celebrate")
emo::ji("beauty")
library(tidyverse)
interviews <- readr::read_csv("data/SAFI_clean.csv")
interviews_plotting <- readr::read_csv("data/interviews_plotting.csv")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
emo::ji("graph")
emo::ji("nature")
emo::ji("landscape")
emo::ji("network")
emo::ji("graph")
emo::ji("graph")
emo::ji("graph")
emo::ji("graph")
emo::ji("graph")
emo::ji("graph")
emo::ji("graph")
emo::ji("graph")
emo::ji("strong")
emo::ji("strong")
emo::ji("strong")
jis
emo::jis
emo::jis[name=='graph']
as.data.table(emo::jis)[name=='graph']
data.table::as.data.table(emo::jis)[name=='graph']
data.table::as.data.table(emo::jis)[,.N, by = subgroup]
data.table::as.data.table(emo::jis)[,.N, by = subgroup][order(-N)]
data.table::as.data.table(emo::jis)[subgroup == 'computer']
data.table::as.data.table(emo::jis)[grep('graph', keywords)]
emo::ji("chart decreasing")
emo::ji("chart increasing")
data.table::as.data.table(emo::jis)[grep('journey', keywords)]
data.table::as.data.table(emo::jis)[grep('travel', keywords)]
emo::ji("world map")
emo::ji("world map ")
emo::ji("world")
emo::ji("world")
emo::ji("world")
emo::ji("world")
emo::ji("world")
emo::ji("world")
emo::ji("world")
emo::ji("luggage")
emo::ji("luggage")
interviews_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village)) +
geom_count(alpha= 0.5) +
theme_minimal()
interviews_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village)) +
geom_count(alpha= 0.7) +
theme_minimal()
ints <-as.data.table(interviews_plotting)
library(data.table)
ints <-as.data.table(interviews_plotting)
ints
ints
interviews_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village)) +
geom_count(alpha= 0.7) +
theme_minimal()
ints[,.N by=.(no_membrs, number_items) ]
ints[,.N, by=.(no_membrs, number_items) ]
interviews_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village)) +
geom_count(alpha= 0.7) +
theme_minimal()
ints %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.7) +
theme_minimal()
ints<-ints[,.N, by=.(no_membrs, number_items,color) ]
ints<-ints[,.N, by=.(no_membrs, number_items,village) ]
ints %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.7) +
theme_minimal()
ints %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.7) +
scale_size(range=c(2,10),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
theme_minimal()
ints %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.7) +
scale_size(range=c(2,6),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
theme_minimal()
ints %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.7) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
theme_minimal()
ints %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.7) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
xlab('Number of items')+
ylab('Number of family members')+
scale_color_manual('#a6cee3','#1f78b4','#b2df8a') +
theme_minimal()
ints %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.7) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
xlab('Number of items')+
ylab('Number of family members')+
scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a')) +
theme_minimal()
percent_wall_type <- interviews_plotting %>%
filter(respondent_wall_type != "cement") %>%
count(village, respondent_wall_type) %>%
group_by(village) %>%
mutate(percent = (n / sum(n)) * 100) %>%
ungroup()
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
scale_fill_viridis_d() # add colourblind-friendly palette
library(data.table)
ints<-as.data.table(interviews_plotting)
ints_plotting<-ints[,.N, by=.(no_membrs, number_items,village) ]
ints %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.7) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
xlab('Number of items')+
ylab('Number of family members')+
scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a')) +
theme_minimal()
library(data.table)
ints<-as.data.table(interviews_plotting)
ints_plotting<-ints[,.N, by=.(no_membrs, number_items,village) ]
ints_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.7) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
xlab('Number of items')+
ylab('Number of family members')+
scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a')) +
theme_minimal()
library(data.table)
ints<-as.data.table(interviews_plotting)
ints_plotting<-ints[,.N, by=.(no_membrs, number_items,village) ]
ints_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.6) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
xlab('Number of items')+
ylab('Number of family members')+
scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a')) +
theme_minimal()
library(data.table)
ints<-as.data.table(interviews_plotting)
ints_plotting<-ints[,.N, by=.(no_membrs, number_items,village) ]
ints_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.6) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
ylab('Number of items')+
xlab('Number of family members')+
scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a')) +
theme_minimal()+
theme(panel.grid = element_blank())
ints_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.6) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
ylab('Number of items')+
xlab('Number of family members')+
scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a')) +
theme_minimal()+
theme(axis.line = element_blank())
library(data.table)
ints<-as.data.table(interviews_plotting)
ints_plotting<-ints[,.N, by=.(no_membrs, number_items,village) ]
ints_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.6) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
ylab('Number of items')+
xlab('Number of family members')+
scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a')) +
theme_minimal()
#theme(axis.line = element_blank())
library(data.table)
ints<-as.data.table(interviews_plotting)
ints_plotting<-ints[,.N, by=.(no_membrs, number_items,village) ]
ints_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.6) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
ylab('Number of items')+
xlab('Number of family members')+
scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a')) +
theme_minimal()+
theme(axis.line = element_blank())
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(panel.grid = element_bla)
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(panel.grid = element_blank())
scale_fill_viridis_d() # add colourblind-friendly palette
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(panel.grid = element_blank())+
scale_fill_viridis_d() # add colourblind-friendly palette
percent_wall_type
percent_wall_type
ints
percent_wall_type <- ints[respondent_wall_type != "cement", .N, by = .(village, respondent_wall_type) ]
percent_wall_type[,.(percent = (N / sum(N)) * 100)]
percent_wall_type
percent_wall_type
percent_wall_type
percent_wall_type <- ints[respondent_wall_type != "cement", .N, by = .(village, respondent_wall_type) ]
percent_wall_type[,percent := (N / sum(N)) * 100]
percent_wall_type
percent_wall_type
percent_wall_type\
percent_wall_type
percent_wall_type <- interviews_plotting %>%
filter(respondent_wall_type != "cement") %>%
count(village, respondent_wall_type) %>%
group_by(village) %>%
mutate(percent = (n / sum(n)) * 100) %>%
ungroup()
percent_wall_type
percent_wall_type
percent_wall_type <- ints[respondent_wall_type != "cement", .N, by = .(village, respondent_wall_type) ]
percent_wall_type[,percent := (N / sum(N)) * 100, by=village]
percent_wall_type
percent_wall_type <- ints[respondent_wall_type != "cement", .N, by = .(village, respondent_wall_type) ]
percent_wall_type[,percent := round((N / sum(N)) * 100), by=village]
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(panel.grid = element_blank())+
scale_fill_viridis_d() # add colourblind-friendly palette
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(panel.grid.major.x  = element_blank())+
scale_fill_viridis_d() # add colourblind-friendly palette
library(data.table)
ints<-as.data.table(interviews_plotting)
ints_plotting<-ints[,.N, by=.(no_membrs, number_items,village) ]
ints_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.6) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
ylab('Number of items')+
xlab('Number of family members')+
#scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a')) +
scale_color_viridis_d() +
theme_minimal()
# percent_wall_type <- interviews_plotting %>%
#     filter(respondent_wall_type != "cement") %>%
#     count(village, respondent_wall_type) %>%
#     group_by(village) %>%
#     mutate(percent = (n / sum(n)) * 100) %>%
#     ungroup()
percent_wall_type <- ints[respondent_wall_type != "cement", .N, by = .(village, respondent_wall_type) ]
percent_wall_type[,percent := round((N / sum(N)) * 100), by=village]
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(panel.grid.major.x  = element_blank())+
#scale_fill_viridis_d() # add colourblind-friendly palette
scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a'))
# percent_wall_type <- interviews_plotting %>%
#     filter(respondent_wall_type != "cement") %>%
#     count(village, respondent_wall_type) %>%
#     group_by(village) %>%
#     mutate(percent = (n / sum(n)) * 100) %>%
#     ungroup()
percent_wall_type <- ints[respondent_wall_type != "cement", .N, by = .(village, respondent_wall_type) ]
percent_wall_type[,percent := round((N / sum(N)) * 100), by=village]
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(panel.grid.major.x  = element_blank())+
#scale_fill_viridis_d() # add colourblind-friendly palette
scale_fill_manual(values = c('#a6cee3','#1f78b4','#b2df8a'))
library(data.table)
ints<-as.data.table(interviews_plotting)
ints_plotting<-ints[,.N, by=.(no_membrs, number_items,village) ]
ints_plotting %>%
ggplot(aes(x = no_membrs, y = number_items, color = village, size = N)) +
geom_jitter(alpha= 0.6) +
scale_size(range=c(2,8),
breaks=c(1,2,3),
labels=c("1","2","3"),
name = "Group Size",
guide="legend") +
ylab('Number of items')+
xlab('Number of family members')+
#scale_color_manual(values = c('#a6cee3','#1f78b4','#b2df8a')) +
scale_color_viridis_d(name="Village") +
theme_minimal()
# percent_wall_type <- interviews_plotting %>%
#     filter(respondent_wall_type != "cement") %>%
#     count(village, respondent_wall_type) %>%
#     group_by(village) %>%
#     mutate(percent = (n / sum(n)) * 100) %>%
#     ungroup()
percent_wall_type <- ints[respondent_wall_type != "cement", .N, by = .(village, respondent_wall_type) ]
percent_wall_type[,percent := round((N / sum(N)) * 100), by=village]
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(panel.grid.major.x  = element_blank())+
#scale_fill_viridis_d() # add colourblind-friendly palette
scale_fill_manual(values = c('#a6cee3','#1f78b4','#b2df8a'), name = 'Wall type')
# percent_wall_type <- interviews_plotting %>%
#     filter(respondent_wall_type != "cement") %>%
#     count(village, respondent_wall_type) %>%
#     group_by(village) %>%
#     mutate(percent = (n / sum(n)) * 100) %>%
#     ungroup()
percent_wall_type <- ints[respondent_wall_type != "cement", .N, by = .(village, respondent_wall_type) ]
percent_wall_type[,percent := round((N / sum(N)) * 100), by=village]
percent_wall_type %>%
ggplot(aes(x = village, y = percent, fill = respondent_wall_type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
xlab('Village') +
ylab('Percent') +
theme(panel.grid.major.x  = element_blank())+
#scale_fill_viridis_d() # add colourblind-friendly palette
scale_fill_manual(values = c('#a6cee3','#1f78b4','#b2df8a'), name = 'Wall type')
library(tidyverse)
interviews <- readr::read_csv("data/SAFI_clean.csv")
interviews_plotting <- readr::read_csv("data/interviews_plotting.csv")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
# percent_wall_type <- interviews_plotting %>%
#     filter(respondent_wall_type != "cement") %>%
#     count(village, respondent_wall_type) %>%
#     group_by(village) %>%
#     mutate(percent = (n / sum(n)) * 100) %>%
#     ungroup()
percent_wall_type <- ints[respondent_wall_type != "cement", .N, by = .(village, respondent_wall_type) ]
summary(interviews)
